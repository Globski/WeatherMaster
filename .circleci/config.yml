version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.8
      - image: circleci/node:14.17
      - image: circleci/postgres:13-alpine
      - image: redis:6

    environment:
      FLASK_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_DB: weather_db
      POSTGRES_PASSWORD: postgres
      REDIS_URL: redis://localhost:6379

    steps:
      - checkout

      # Install Backend Dependencies (Flask)
      - run:
          name: Set up Python Environment
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r backend/requirements.txt

      # Install Frontend Dependencies (React)
      - run:
          name: Install Frontend Dependencies
          command: |
            cd frontend
            npm install

      # Run Database Migrations
      - run:
          name: Run Database Migrations
          command: |
            cd backend
            . ../venv/bin/activate
            flask db upgrade

      # Build Frontend
      - run:
          name: Build Frontend
          command: |
            cd frontend
            npm run build

      # Run Backend Tests
      - run:
          name: Run Backend Tests
          command: |
            cd backend
            . ../venv/bin/activate
            pytest

      # Run Frontend Tests
      - run:
          name: Run Frontend Tests
          command: |
            cd frontend
            npm run test

      # Check for linting errors
      - run:
          name: Check Code Linting
          command: |
            cd frontend
            npm run lint
            cd ../backend
            flake8 .

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
